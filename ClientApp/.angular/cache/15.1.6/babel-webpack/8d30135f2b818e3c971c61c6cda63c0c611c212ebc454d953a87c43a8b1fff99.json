{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet CompFetchDataComponent = class CompFetchDataComponent {\n  constructor(http, baseUrl, router) {\n    this.compfetchdata = [];\n    console.log(baseUrl);\n    http.get(baseUrl + 'weatherforecast/getcompany').subscribe(result => {\n      console.log(result);\n      this.compfetchdata = result;\n    }, error => console.error(error));\n  }\n};\nCompFetchDataComponent = __decorate([Component({\n  selector: 'app-comp-fetch-data',\n  templateUrl: './comp-fetch-data.component.html'\n}), __param(1, Inject('BASE_URL'))], CompFetchDataComponent);\nexport { CompFetchDataComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAQ1C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAEjCC,YAAYC,IAAgB,EAAsBC,OAAe,EAAEC,MAAe;IAD3E,kBAAa,GAAc,EAAE;IAElCC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACpBD,IAAI,CAACK,GAAG,CAAYJ,OAAO,GAAG,4BAA4B,CAAC,CAACK,SAAS,CAACC,MAAM,IAAG;MAC7EJ,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;MACnB,IAAI,CAACC,aAAa,GAAGD,MAAM;IAC7B,CAAC,EAAEE,KAAK,IAAIN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;CAED;AAVYX,sBAAsB,eAJlCF,SAAS,CAAC;EACTc,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE;CACd,CAAC,EAG+BC,iBAAM,CAAC,UAAU,CAAC,IAFtCd,sBAAsB,CAUlC;SAVYA,sBAAsB","names":["Component","Inject","CompFetchDataComponent","constructor","http","baseUrl","router","console","log","get","subscribe","result","compfetchdata","error","selector","templateUrl","__param"],"sourceRoot":"","sources":["C:\\Users\\admin\\source\\repos\\Project1\\ClientApp\\src\\app\\company\\comp-fetch-data.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-comp-fetch-data',\r\n  templateUrl: './comp-fetch-data.component.html'\r\n})\r\nexport class CompFetchDataComponent {\r\n  public compfetchdata: Company[] = [];\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, router : Router ) {\r\n    console.log(baseUrl);\r\n    http.get<Company[]>(baseUrl + 'weatherforecast/getcompany').subscribe(result => {\r\n      console.log(result);\r\n      this.compfetchdata = result;\r\n    }, error => console.error(error));\r\n  }\r\n  \r\n}\r\n\r\ninterface Company {\r\n  code: string;\r\n  companyName: string;\r\n  createdDate: Date;\r\n  sharePrice: number;\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}