{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CompanyService {\n  constructor(httpclient, baseUrl) {\n    this.httpclient = httpclient;\n    this.baseUrl = baseUrl;\n  }\n  AddCompany(data) {\n    console.log(data);\n    this.httpclient.post(this.baseUrl + 'weatherforecast/AddCompany', data).subscribe(result => {\n      console.log(result);\n      this.message = result.Message;\n    }, error => console.error(error));\n  }\n}\nCompanyService.ɵfac = function CompanyService_Factory(t) {\n  return new (t || CompanyService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nCompanyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CompanyService,\n  factory: CompanyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,UAAsB,EAA8BC,OAAe;IAAnE,eAAU,GAAVD,UAAU;IAA0C,YAAO,GAAPC,OAAO;EAAY;EAE3FC,UAAU,CAACC,IAAa;IACtBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAI,CAACH,UAAU,CAACM,IAAI,CAAC,IAAI,CAACL,OAAO,GAAG,4BAA4B,EAAEE,IAAI,CAAC,CAACI,SAAS,CAACC,MAAM,IAAG;MACzFJ,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;MACnB,IAAI,CAACC,OAAO,GAAGD,MAAM,CAACE,OAAO;IAC/B,CAAC,EAAEC,KAAK,IAAIP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAVWb,cAAc;mBAAdA,cAAc,0CAE2B,UAAU;AAAA;AAFnDA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFb;AAAM","names":["CompanyService","constructor","httpclient","baseUrl","AddCompany","data","console","log","post","subscribe","result","message","Message","error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\admin\\source\\repos\\Project1\\ClientApp\\src\\app\\Service\\company.service.ts"],"sourcesContent":["import { Injectable , Inject } from '@angular/core';\r\nimport { Company } from '../Model/company'\r\nimport {HttpClient } from '@angular/common/http'\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CompanyService {\r\n\r\n  constructor(private httpclient: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n\r\n  AddCompany(data: Company) {\r\n    console.log(data);\r\n    this.httpclient.post(this.baseUrl + 'weatherforecast/AddCompany', data).subscribe(result => {\r\n      console.log(result);\r\n      this.message = result.Message;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}